# -*- coding: utf-8 -*-
"""spend_analysis_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SWNI2xMFOHlEru0aE2U6wRICH2f7iC18

# Prediksi Total Pengeluaran Berdasarkan Transaksi Pembelian
Proyek Machine Learning untuk submission kelas Dicoding: Machine Learning

**Pendekatan**: Regresi
**Target**: TotalCost

## 1. Pendahuluan
Dalam pengelolaan anggaran perusahaan, penting untuk memahami faktor-faktor yang memengaruhi total pengeluaran dari tiap transaksi. Dengan prediksi yang akurat, perusahaan dapat mengelola anggaran dan negosiasi dengan supplier secara lebih efisien.

## 2. Problem Domain
- **Masalah**: Prediksi total biaya pembelian (`TotalCost`) berdasarkan data transaksi.
- **Solusi**: Model regresi untuk memprediksi nilai `TotalCost`.
- **Manfaat**: Menyediakan insight terhadap pengeluaran berdasarkan jenis barang, supplier, dan pembeli.

## 3. Data Understanding
Kolom-kolom dalam dataset:
- `TransactionID`: ID transaksi
- `ItemName`: Nama barang
- `Category`: Kategori barang
- `Quantity`: Jumlah barang
- `UnitPrice`: Harga satuan
- `TotalCost`: Harga total (target)
- `PurchaseDate`: Tanggal pembelian
- `Supplier`: Pemasok
- `Buyer`: Pembeli
"""

# Import library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load dataset
df = pd.read_csv('/content/spend_analysis_dataset.csv')
df.head()

"""## 4. Exploratory Data Analysis (EDA)
Analisis deskriptif untuk memahami distribusi nilai dan korelasi antar fitur.
"""

# Statistik deskriptif
df.describe()

# Cek missing value
df.isnull().sum()

# Distribusi target
plt.figure(figsize=(8, 4))
sns.histplot(df['TotalCost'], kde=True)
plt.title("Distribusi TotalCost")
plt.show()

# Korelasi fitur numerik
plt.figure(figsize=(6, 5))
sns.heatmap(df[['Quantity', 'UnitPrice', 'TotalCost']].corr(), annot=True, cmap='coolwarm')
plt.title("Korelasi antar fitur numerik")
plt.show()

plt.figure(figsize=(10, 5))
avg_price = df.groupby('Category')['UnitPrice'].mean().sort_values(ascending=False)
sns.barplot(x=avg_price.index, y=avg_price.values)
plt.title("Rata-rata Harga Satuan per Kategori")
plt.ylabel("Harga Rata-rata")
plt.xticks(rotation=0)
plt.show()

"""## 5. Data Preparation
- Encode data kategorikal
- Normalisasi fitur numerik
- Split data train/test
"""

# Encode categorical features
cat_cols = ['Category', 'Supplier', 'Buyer']
le = LabelEncoder()
for col in cat_cols:
    df[col] = le.fit_transform(df[col])

# Feature selection
features = ['Category', 'Quantity', 'UnitPrice', 'Supplier', 'Buyer']
X = df[features]
y = df['TotalCost']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## 6. Modeling
Model: Random Forest Regressor
"""

# Training model
model = RandomForestRegressor(random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

"""## 7. Evaluation
Evaluasi menggunakan metrik MAE, RMSE, dan R² Score.
"""

mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f"MAE: {mae:.2f}")
print(f"RMSE: {rmse:.2f}")
print(f"R²: {r2:.2f}")

"""Berikut hasil evaluasi model regresi menggunakan metrik MAE, RMSE, dan R²:

1. Mean Absolute Error (MAE): 135.65
- Rata-rata selisih absolut antara prediksi dan nilai aktual adalah sekitar 135. Artinya, model umumnya meleset ±135 satuan dalam memprediksi TotalCost.

2. Root Mean Squared Error (RMSE): 326.99
- Menunjukkan bahwa rata-rata kesalahan prediksi dalam satuan aslinya adalah sekitar 327, sedikit lebih sensitif terhadap outlier daripada MAE.

3. R² Score (Koefisien Determinasi): 0.99
- Model mampu menjelaskan 99% variasi dalam data target TotalCost. Ini menunjukkan performa yang sangat baik.

Secara keseluruhan, model memberikan performa prediksi yang sangat akurat berdasarkan data yang tersedia.

## 8. Kesimpulan
Model regresi mampu memprediksi total pengeluaran dengan cukup akurat degan hasil:

* Mean Absolute Error (MAE): 135.65
* Root Mean Squared Error (RMSE): 326.99
* R² Score (Koefisien Determinasi): 0.99

Saran Langkah selanjutnya:
- Coba model lain (Linear Regression, XGBoost)
- Tuning parameter
- Visualisasi hasil prediksi vs data asli
"""